# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    syminorder.offer.configDisplayOfferBy: tagservices # tagservices | categories | null
    syminorder.mainimage.configShowVueMainImage: no_main_image # show_main_image | no_main_image | null
    syminorder.shoping.configDefinedCities: not_define_cities # define_cities | not_define_cities | null
    syminorder.shoping.configProductAdditions: not_define_additions # define_additions | not_define_additions | null
    syminorder.tagservices.configShowDesc: show_long_desc # show_desc | show_long_desc | null
#    product_images_directory: '%kernel.project_dir%/public/uploads/product_images'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    app.menu_builder:
        class: App\Menu\MenuBuilder
        arguments: [ "@knp_menu.factory"]
        tags:
            - { name: knp_menu.menu_builder, method: createMainMenu, alias: main } # The alias is what is used to retrieve the menu

    App\EntityListener\CategoryEntityListener:
            tags:
                - { name: 'doctrine.orm.entity_listener', event: 'prePersist', entity: 'App\Entity\Category'}
                - { name: 'doctrine.orm.entity_listener', event: 'preUpdate', entity: 'App\Entity\Category'}

    App\EntityListener\ProductEntityListener:
            tags:
                - { name: 'doctrine.orm.entity_listener', event: 'prePersist', entity: 'App\Entity\Product'}
                - { name: 'doctrine.orm.entity_listener', event: 'preUpdate', entity: 'App\Entity\Product'}

    App\EntityListener\TagServicesEntityListener:
            tags:
                - { name: 'doctrine.orm.entity_listener', event: 'prePersist', entity: 'App\Entity\TagServices'}
                - { name: 'doctrine.orm.entity_listener', event: 'preUpdate', entity: 'App\Entity\TagServices'}

#    App\Service\ProductImagesUploader:
#        arguments:
#            $targetDirectory: '%product_images_directory%'